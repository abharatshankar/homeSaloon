//
//  ServiceListVC.swift
//  HomeSalon_ServiceProvider_App
//
//  Created by Rajesh Kishanchand on 8/1/19.
//  Copyright Â© 2019 Volive Solutions. All rights reserved.
//

import UIKit
import Alamofire

struct Section {
    var name: String!
    var imagename: String!
    var items: [String]!
    var collapsed: Bool!
    
    init(name: String,imagesName:String, items: [String]) {
        self.name = name
        self.items = items
        self.collapsed = false
        self.imagename = imagesName
    }
}

  var stringArray = String()
  var arrSelected = [String]()

  //var arrSelected1 = [String]()

class ServiceListVC: UIViewController {
    
    var location = ""
    var longitude = ""
    var latitude = ""

   //var arrSelectedRows = [Int]()
    
    @IBOutlet var submit_button: UIButton!
    
    @IBOutlet var serviceList_Tableview: UITableView!
    
    var sections = [Section]()
    
    var ServiceListData = [ServiceListModel]()
    
    var subcatageoryId = [String]()
    var subcatageoryNamesArray = [String]()
    var subcatageoryImageArray = [String]()
    var allSubCatArray = [[String]]()
    
    private var sectionIsExpanded = [Bool]()
    
    let language = UserDefaults.standard.object(forKey: "currentLanguage") as? String ?? "en"
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.navigationItem.title = languageChangeString(a_str:"Service")
        let nav = self.navigationController?.navigationBar
        nav?.barStyle = UIBarStyle.black
        nav?.tintColor = UIColor.white
        nav?.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.white]

        navigationController?.navigationBar.barTintColor = UIColor.init(red: 87.0/255.0, green: 96.0/255.0, blue: 124.0/255.0, alpha: 1.0)
        
        submit_button.layer.cornerRadius = 25
        self.submit_button.setTitle(languageChangeString(a_str: "SUBMIT"), for: UIControl.State.normal)
        
        // Do any additional setup after loading the view.
   
    }
    
    override func viewWillAppear(_ animated: Bool) {
        
        UserDefaults.standard.removeObject(forKey: "Stime")
        UserDefaults.standard.removeObject(forKey: "Sdate")
        
        filterApplied = false
        serviceListCall()
    }
    
    @IBAction func backBtnTap(_ sender: Any) {
        
//        let vc = self.storyboard?.instantiateViewController(withIdentifier: "UserHomeViewController1")as! UserHomeViewController
//        self.navigationController?.pushViewController(vc, animated: true)
        
          self.navigationController?.popViewController(animated: true)
    }
    
    
    // MARK: - Back Button
    @objc func showLeftView(sender: AnyObject?) {
        
        self.navigationController?.popViewController(animated: true)
    }
    
    @IBAction func submitBtnAction(_ sender: Any) {
        
        let array = arrSelected.map {String($0)}
        stringArray = array.minimalDescription
        print(stringArray)
        
       if array.count > 0
        {
            if arrSelected.count > 3
            {
                showToastForAlert(message: languageChangeString(a_str: "You can select upto 3 services only")!)
                return
            }
          let atSalon = UIStoryboard.init(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "AtSalonViewController") as! AtSalonViewController
            atSalon.userLocation = location
            atSalon.userLongitude = longitude
            atSalon.userLatitude = latitude
            
         self.navigationController?.pushViewController(atSalon, animated: true)
        }
        else{
            showToastForAlert(message: languageChangeString(a_str: "Please select any service")!)
        }
    }
}


extension ServiceListVC:UITableViewDataSource,UITableViewDelegate{
    
    
    func numberOfSections(in tableView: UITableView) -> Int {
      
        return ServiceListData.count
    }
    
   
    func tableView(_ tableView: UITableView, estimatedHeightForFooterInSection section: Int) -> CGFloat {
        return 15
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // First will always be header
        return sectionIsExpanded[section] ? (1+ServiceListData[section].subcategory_id.count) : 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        if indexPath.row == 0 {
            
            let cell = tableView.dequeueReusableCell(withIdentifier: "ServiceHeaderViewTableViewCell", for: indexPath) as! ServiceHeaderViewTableViewCell
            
            cell.serviceName_Label.text = ServiceListData[indexPath.section].category_name_en
            
            let imageLink = base_path+ServiceListData[indexPath.section].category_image
            cell.serviceImg_ImageView.sd_setImage(with: URL(string:imageLink))
       
          if sectionIsExpanded[indexPath.section] {
            
                cell.setExpanded()
            
            } else {
                cell.setCollapsed()
            }
            
            return cell
        }
        else {
            let cell = tableView.dequeueReusableCell(withIdentifier: "SubServiceListTableViewCell", for: indexPath) as! SubServiceListTableViewCell
            cell.subServiceName_Label.text = ServiceListData[indexPath.section].subcategory_name_en[indexPath.row - 1]
         
            
//            if let id = Int(ServiceListData[indexPath.section].subcategory_id[indexPath.row-1])
//            {
//                if arrSelected.contains(id){
//                    cell.btnselectedOrNot.setImage(UIImage(named:"check_box_check"), for: .normal)
//
//                }else{
//                    cell.btnselectedOrNot.setImage(UIImage(named:"Group 3712"), for: .normal)
//                }
//                cell.btnselectedOrNot.tag = id
//                cell.btnselectedOrNot.addTarget(self, action: #selector(checkBoxSelection(_:)), for: .touchUpInside)
//
//            }
            
            cell.btnselectedOrNot.mk_addTapHandler { (btn) in
                //print("You can use here also directly : \(indexPath.row)")
                self.checkBoxSelection(btn: btn, indexpath: indexPath)
                
            }
            
            let rowid = ServiceListData[indexPath.section].subcategory_id[indexPath.row-1]
            let found = arrSelected.contains(rowid)
            if found
            {
                cell.btnselectedOrNot.setImage(UIImage(named:"check_box_check"), for: .normal)
            }
            else
            {
                cell.btnselectedOrNot.setImage(UIImage(named:"Group 3712"), for: .normal)
                
            }
            
            
            return cell
        }
    }
    
    @objc func checkBoxSelection(btn:UIButton , indexpath :IndexPath)
    {
        
      
        if arrSelected.contains(ServiceListData[indexpath.section].subcategory_id[indexpath.row-1])
        {
            arrSelected.remove(at: arrSelected.index(of:ServiceListData[indexpath.section].subcategory_id[indexpath.row-1])!)
            
           
        }
        else
        {
            arrSelected.append(ServiceListData[indexpath.section].subcategory_id[indexpath.row-1])
          
            
        }
        
        self.serviceList_Tableview.reloadData()
        
        
       
    }
    
    
    

//  @objc func checkBoxSelection(_ sender:UIButton)
//  {
////    if arrSelectedRows.count >= 3
////    {
////       if self.arrSelectedRows.contains(sender.tag){
////            self.arrSelectedRows.remove(at: self.arrSelectedRows.index(of: sender.tag)!)
////        }
////        else
////        {
////            //self.arrSelectedRows.append(sender.tag)
////             showToastForAlert(message: "you can select upto 3 services only")
////        }
////
////    }
////    else
////    {
//        if arrSelected.contains(sender.tag)
//        {
//          arrSelected.remove(at: arrSelected.index(of: sender.tag)!)
//        }
//         else
//         {
//           arrSelected.append(sender.tag)
//        }
//
//    //}
//    self.serviceList_Tableview.reloadData()
//
//  }
    
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if indexPath.row == 0 {
           return 65
        }else{
            return 45
        }
        
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // Expand/hide the section if tapped its header
        if indexPath.row == 0 {
            
            sectionIsExpanded[indexPath.section] = !sectionIsExpanded[indexPath.section]
            
            tableView.reloadSections([indexPath.section], with: .automatic)
        }
        
      
    }
    
    
    func serviceListCall()
    {
        
        if Reachability.isConnectedToNetwork()
        {
            MobileFixServices.sharedInstance.loader(view: self.view)
            
            //    https://www.volive.in/spsalon/services/choose_service
            //    Category and Subcategory data (GET method)
            //
            //    api_key:2382019
            //    lang:en
        
            
            let catageories = "\(base_path)services/choose_service?"
            
            let parameters: Dictionary<String, Any> = [ "api_key" :APIKEY , "lang": language]
            
            Alamofire.request(catageories, method: .get, parameters: parameters, encoding: URLEncoding.default, headers: nil).responseJSON { response in
                
                if let responseData = response.result.value as? Dictionary<String, Any>
                {
                   
                    
                    //print(responseData)
                    let status = responseData["status"] as? Int
                    let message = responseData["message"] as? String
                    if status == 1
                    {
                        self.ServiceListData = [ServiceListModel]()
                       
                        
                        if let response1 = responseData["Services"] as? Dictionary<String, Any>
                        {
                            if let catResponse = response1["categories"] as? [[String:Any]]
                            {
                               
                                for list in catResponse {
                                    
                                let object = ServiceListModel(categoryData: list as NSDictionary)
                                   
                                    self.ServiceListData.append(object)
                                
                                self.allSubCatArray = [object.subcategory_id + object.subcategory_image + object.subcategory_name_en]
                                    
                                    
                                for list in self.allSubCatArray{
                                    self.subcatageoryId = list
                                    self.subcatageoryImageArray = list
                                    self.subcatageoryNamesArray = list
                                   }
                                    self.sectionIsExpanded.append(false)
                                   
                                }
                            }
                        }
                        
                        DispatchQueue.main.async {
                             MobileFixServices.sharedInstance.dissMissLoader()
                            self.serviceList_Tableview.reloadData()
                        }
                        
                     }
                    else{
                        DispatchQueue.main.async
                            {
                                MobileFixServices.sharedInstance.dissMissLoader()
                                self.showToastForAlert(message: message ?? "")
                                
                        }
                    }
                }
            }
        }
        else{
            MobileFixServices.sharedInstance.dissMissLoader()
            showToastForAlert (message: languageChangeString(a_str: "Please ensure you have proper internet connection")!)
            
        }
        
    }
    
}

extension Array {
    var minimalDescription: String {
        return map { "\($0)" }.joined(separator: ",")
    }
}


//"REQUEST"="Ø·ÙØ¨Ø§Øª";
//"COMPLETE"="ÙÙØªÙÙØ©";
//"SCHEDULE"="Ø§ÙØ¬Ø¯ÙÙ";
//"PENDING"="ÙÙØ¯ Ø§ÙØ¹ÙÙ";
//"Requests"="Ø§ÙØ·ÙØ¨Ø§Øª";
//"Service"="Ø§ÙØ®Ø¯ÙØ©";
//"Service Type"="ÙÙØ¹ Ø§ÙØ®Ø¯ÙØ©";
//"Visit Date & Times"="ÙÙØª Ù ØªØ§Ø±ÙØ® Ø§ÙØ²ÙØ§Ø±Ø©";
//"Cost"="Ø§ÙÙÙÙØ©";
//"Address"="Ø§ÙØ¹ÙÙØ§Ù";
//"Description"="Ø§ÙÙØµÙ";
//"ACCEPT"="ÙØ¨ÙÙ";
//"REJECT"="Ø±ÙØ¶";
//"View Details"="Ø¹Ø±Ø¶ Ø§ÙØªÙØ§ØµÙÙ";
//"REJECT REQUEST"="Ø±ÙØ¶ Ø§ÙØ·ÙØ¨";
//"Reasons for Rejection"="Ø³Ø¨Ø¨ Ø§ÙØ±ÙØ¶";
//"SUBMIT"="Ø§ÙØªØ§ÙÙ";
//"Please select reason to reject the request"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø³Ø¨Ø¨ Ø§ÙØ±ÙØ¶";
//"Done"="ØªÙ";
//"Cancel"="Ø§ÙØºØ§Ø¡";
//"Please ensure you have proper internet connection"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§ÙØªØ£ÙØ¯ ÙÙ Ø§ØªØµØ§Ù Ø§ÙØ¥ÙØªØ±ÙØª";
//"Details"="Ø§ÙØªÙØ§ØµÙÙ";
//"HomeService"="Ø®Ø¯ÙØ© ÙÙØ²ÙÙØ©";
//"At the Salon"="ÙÙ Ø§ÙØµØ§ÙÙÙ ";
//"HomeService & At the Salon"="ÙÙØªÙÙ";
//"Completed"="Ø±ÙØ¶";
//"REJECT"="ÙØ¯ÙÙØ¹";
//"PAID"="ÙØ¯ÙÙØ¹";
//"COMPLETE WORK"="Ø£ÙØªÙÙ Ø§ÙØ¹ÙÙ;
//"START WORKING"="Ø¨Ø¯Ø£ Ø§ÙØ¹ÙÙ ";
//"Order ID"="Ø±ÙÙ Ø§ÙØ·ÙØ¨";
//"Visit Date&Times"="ÙÙØª Ù ØªØ§Ø±ÙØ® Ø§ÙØ²ÙØ§Ø±Ø© ";
//"Order NO"="Ø±ÙÙ Ø§ÙØ·ÙØ¨";
//"Payment Status"="Ø­Ø§ÙØ© Ø§ÙØ¯ÙØ¹";
//"START WORKING"="Ø¨Ø¯Ø£ Ø§ÙØ¹ÙÙ";
//"List of Services"="Ø§ÙØ®Ø¯ÙØ§Øª";
//"Edit"="ØªØ­Ø±ÙØ±";
//"Save"="Ø­ÙØ¸";
//"ADD NEW SERVICE"="Ø¥Ø¶Ø§ÙØ© Ø®Ø¯ÙØ© Ø¬Ø¯ÙØ¯Ø©";
//"Delete"="Ø­Ø°Ù";
//"Please Select Category"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± ÙØ¦Ø©";
//"ADD NEW SERVICE"="Ø¥Ø¶Ø§ÙØ© Ø®Ø¯ÙØ© Ø¬Ø¯ÙØ¯Ø©";
//"Select category"="Ø§Ø®ØªØ± Ø§ÙÙØ¦Ø©";
//"Subcategories"="Ø§Ø®ØªØ± Ø§ÙÙØ¦Ø© Ø§ÙÙØ±Ø¹ÙØ©";
//"Service price"="Ø³Ø¹Ø± Ø§ÙØ®Ø¯ÙØ©";
//"CANCLE"="Ø§ÙØºØ§Ø¡";
//"SCHEDULE"="Ø¬Ø¯ÙÙ";
//"Profile"="Ø§ÙÙÙÙ Ø§ÙØ´Ø®ØµÙ";
//"Available"="ÙØªØ§Ø­";
//"UnAvailable"="ØºÙØ± ÙØªØ§Ø­";
//"Name"="Ø§ÙØ§Ø³Ù";
//"Email"="Ø§ÙØ¨Ø±ÙØ¯ Ø§ÙØ¥ÙÙØªØ±ÙÙÙ";
//"Mobile Number"="Ø±ÙÙ Ø§ÙÙØ§ØªÙ";
//"Change Password"="ØªØºÙÙØ± ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"Password"="ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"Confirm Password"="ØªØ£ÙÙØ¯ ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"Available Time"="Ø£ÙÙØ§Øª Ø§ÙØ¹ÙÙ";
//"Monday"="Ø§ÙØ¥Ø«ÙÙÙ";
//"Tuesday"="Ø§ÙØ«ÙØ§Ø«Ø§Ø¡";
//"Wednesday"="Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡";
//"Thursday"="Ø§ÙØ®ÙÙØ³";
//"Friday"="Ø§ÙØ¬ÙØ¹Ø©";
//"Saturday"="Ø§ÙØ³Ø¨Øª";
//"Sunday"="Ø§ÙØ£Ø­Ø¯";
//"IBAN Number"="Ø±ÙÙ Ø§Ù IBAN";
//"Pictures"="Ø§ÙØµÙØ±";
//"ADD"="Ø§Ø¶Ù";
//"Home Salon"="Ø®Ø¯ÙØ§Øª ÙÙØ²ÙÙØ©";
//"Upload Banner"="Ø±ÙØ¹ Ø§ÙØ¨Ø§ÙØ±";
//"Title"="Ø§ÙØ¹ÙÙØ§Ù";
//"Closing time should be greater than opening time"="ÙÙØª Ø§ÙØ¥ØºÙØ§Ù ÙØ¬Ø¨ Ø£Ù ÙÙÙÙ Ø¨Ø¹Ø¯ ÙÙØª Ø§ÙÙØªØ­";
//"Please enter all timings"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù Ø¬ÙÙØ¹ Ø§ÙØ£ÙÙØ§Øª";
//"Choose Image"="Ø§Ø®ØªØ± Ø§ÙØµÙØ±Ø©";
//"Camera"="ÙØ§ÙÙØ±Ø§";
//"Gallery"="Ø§ÙØ£Ø³ØªÙØ¯ÙÙ";
//"Cancel"="Ø§ÙØºØ§Ø¡";
//"You don't have camera"="Ø§ÙÙØ§ÙÙØ±Ø§ ØºÙØ± ÙØªØ§Ø­Ø©";
//"Ok"="ÙÙØ§ÙÙ";
//"password and confirm password are different"="ØªØ£ÙÙØ¯ ÙÙÙØ© Ø§ÙÙØ±ÙØ±  ÙØ®ØªÙÙ Ø¹Ù ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"Error"="Ø®Ø·Ø£";
//"Enable photo permissions in settings"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§ÙØ³ÙØ§Ø­ Ø¨Ø§ÙÙØµÙÙ ÙÙØµÙØ± ÙÙ Ø§ÙØ¥Ø¹Ø¯Ø§Ø¯Ø§Øª";
//"Settings"="Ø§ÙØ¥Ø¹Ø¯Ø§Ø¯Ø§Øª";
//"HOME"="Ø§ÙØµÙØ­Ø©Ø§ÙØ±Ø¦ÙØ³ÙØ©";
//"List of Services"="Ø§ÙØ®Ø¯ÙØ§Øª";
//"NOTIFICATIONS"="Ø§ÙØªÙØ¨ÙÙØ§Øª";
//"MY PROFILE"="Ø­Ø³Ø§Ø¨Ù";
//"TERMS AND CONDITIONS"="Ø§ÙØ´Ø±ÙØ· ÙØ§ÙØ£Ø­ÙØ§Ù";
//"SIGN OUT"="ØªØ³Ø¬ÙÙ Ø§ÙØ®Ø±ÙØ¬";
//"Change"="ØªØºÙÙØ±";
//"ORDERS"="Ø§ÙØ·ÙØ¨Ø§Øª";
//"CONTACT US"="Ø§ØªØµÙ Ø¨ÙØ§";
//"Login"="ØªØ³Ø¬ÙÙ Ø§ÙØ¯Ø®ÙÙ";
//"Create Account"="Ø§ÙØªØ³Ø¬ÙÙ";
//"Forgot Password"="ÙØ³ÙØª ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"E-mail Address"="Ø§ÙØ¨Ø±ÙØ¯ Ø§ÙØ¥ÙÙØªØ±ÙÙÙ";
//"Verification"="Ø§ÙØªØ£ÙÙØ¯";
//"Verify your mobile"="ØªØ£ÙÙØ¯ Ø±ÙÙ Ø§ÙØ¬ÙØ§Ù";
//"Enter your OTP CODE here"="ÙØ£ÙÙ Ø§Ø¯Ø®Ø§Ù Ø§ÙØ±ÙØ² Ø§ÙÙØ±Ø³Ù Ø§ÙÙ Ø¬ÙØ§ÙÙ";
//"VERIFY"="ØªØ£ÙÙØ¯";
//"Didn't receive the code?"="ÙÙ ØªÙÙ Ø¨Ø¥Ø³ØªÙØ§Ù Ø§ÙØ±ÙØ² Ø";
//"Resend code"="Ø¥Ø¹Ø§Ø¯Ø© Ø§Ø±Ø³Ø§Ù Ø§ÙØ±ÙØ²";
//"Choose your option"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± ÙÙØ¹ Ø§ÙØ®Ø¯ÙØ©";
//"Select your location"="Ø§ÙØ±Ø¬Ø§Ø¡ ØªØ­Ø¯ÙØ¯ ÙÙÙØ¹Ù";
//"Description"="Ø§ÙÙØµÙ";
//"Our Services"="Ø®Ø¯ÙØ§ØªÙØ§";
//"Availability"="Ø³Ø§Ø¹Ø§Øª Ø§ÙØ¹ÙÙ";
//"Select Time"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø§ÙÙÙØª";
//"Select Date"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø§ÙØªØ§Ø±ÙØ®";
//"Time"="Ø§ÙÙÙØª";
//"Date"="Ø§ÙØªØ§Ø±ÙØ®";
//"SEND REQUEST"="Ø¥Ø±Ø³Ø§Ù Ø§ÙØ·ÙØ¨";
//"Services"="Ø§ÙØ®Ø¯ÙØ§Øª";
//"You can select upto 3 services only"="ÙÙÙÙ Ø¥Ø®ØªÙØ§Ø± Ø«ÙØ§Ø« Ø®Ø¯ÙØ§Øª Ø¨Ø­Ø¯ Ø£ÙØµÙ";
//"Please select any service"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø§ÙØ®Ø¯ÙØ©";
//"Location Services Disabled!"="Ø®Ø¯ÙØ© Ø§ÙÙÙÙØ¹ ÙØ¹Ø·ÙØ©";
//"Please enable Location Based Services for better results! We promise to keep your location private"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§ÙØ³ÙØ§Ø­ Ø¨Ø§ÙÙØµÙÙ ÙÙÙÙÙØ¹ ÙÙ Ø§ÙØ§Ø¹Ø¯Ø§Ø¯Ø§Øª ÙÙØªØ§Ø¦Ø¬ Ø£ÙØ¶Ù";
//"Cancel"="Ø§ÙØºØ§Ø¡";
//"BOOKING DETAILS"="ØªÙØ§ØµÙÙ Ø§ÙØ­Ø¬Ø²";
//"Booking services"="Ø§ÙØ®Ø¯ÙØ§Øª";
//"SEND REQUEST"="Ø¥Ø±Ø³Ø§Ù Ø§ÙØ·ÙØ¨";
//"TotalPrice"="Ø§ÙØ³Ø¹Ø± Ø§ÙÙÙÙØ©";
//"Choose your option"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± ÙÙØ¹ Ø§ÙØ®Ø¯ÙØ©";
//"NOW"="Ø§ÙØ¢Ù";
//"SCHEDULED"="Ø®Ø¯ÙØ© ÙØ¬Ø¯ÙÙØ©";
//"SUBMIT"="Ø§ÙØªØ§ÙÙ";
//"Filters"="ØªØµÙÙØ©";
//"Reset"="ÙØ³Ø­";
//"Category"="Ø§ÙÙØ¦Ø©";
//"Subcategory"="Ø§ÙÙØ¦Ø© Ø§ÙÙØ±Ø¹ÙØ©";
//"Price Range"="Ø§ÙØ³Ø¹Ø±";
//"Min"="Ø§ÙØ­Ø¯ Ø§ÙØ£Ø¯ÙÙ";
//"Max"="Ø§ÙØ­Ø¯ Ø§ÙØ£Ø¹ÙÙ";
//"Location"="Ø§ÙÙÙÙØ¹";
//"Ratings"="Ø§ÙØªÙÙÙÙ";
//"5 Rating"="ØªÙÙÙÙ 5";
//"4 & UP"="ØªÙÙÙÙ Ø£Ø¹ÙÙ ÙÙ 4";
//"3 & UP"="ØªÙÙÙÙ Ø£Ø¹ÙÙ ÙÙ 3";
//"2 & UP"="ØªÙÙÙÙ Ø£Ø¹ÙÙ ÙÙ 2";
//"1 & UP"="ØªÙÙÙÙ Ø£Ø¹ÙÙ ÙÙ 1";
//"Sort By"="Ø§Ø¸ÙØ§Ø± Ø­Ø³Ø¨";
//"Popularity"="Ø§ÙØ£ÙØ«Ø± Ø´ÙØ±Ø©";
//"Price from Low to High"="Ø§ÙØ³Ø¹Ø± ÙÙ Ø§ÙØ£Ø¯ÙÙ ÙÙØ£Ø¹ÙÙ";
//"Price from Hight to Low"="Ø§ÙØ³Ø¹Ø± ÙÙ Ø§ÙØ£Ø¹ÙÙ ÙÙØ£Ø¯ÙÙ";
//"APPLY FILTER"="ØªØ·Ø¨ÙÙ";
//"My Favorites"="ÙÙØ¶ÙØ§ØªÙ";
//"Open now"="ÙÙØªÙØ­ Ø§ÙØ£Ù";
//"Order No"="Ø±ÙÙ Ø§ÙØ·ÙØ¨";
//"Customer Name"="Ø§Ø³Ù Ø§ÙØ¹ÙÙÙ";
//"Invoice No"="Ø±ÙÙ Ø§ÙÙØ§ØªÙØ±Ø©";
//"Date"="Ø§ÙØªØ§Ø±ÙØ®";
//"Service Details"="ØªÙØ§ØµÙÙ Ø§ÙØ®Ø¯ÙØ©";
//"Discount coupon codes"="Ø§Ø³ØªØ®Ø¯Ø§Ù ÙØ³ÙÙØ© Ø´Ø±Ø§Ø¡";
//"Enter your coupon code"="Ø§Ø¯Ø®Ù Ø±ÙÙ Ø§ÙÙØ³ÙÙØ©";
//"APPLY"="ØªØ·Ø¨ÙÙ";
//"Details"="Ø§ÙØªÙØ§ØµÙÙ";
//"Sub Total"="Ø§ÙÙØ¬ÙÙØ¹ Ø§ÙÙØ±Ø¹Ù";
//"Coupon"="ÙØ³ÙÙØ© Ø§ÙØ´Ø±Ø§Ø¡";
//"Total Amount"="Ø§ÙÙØ¬ÙÙØ¹ Ø§ÙÙÙÙ";
//"PAYMENT OPTION"="Ø®ÙØ§Ø± Ø§ÙØ¯ÙØ¹";
//"Successful"="ØªÙ Ø§ÙØ¯ÙØ¹ Ø¨ÙØ¬Ø§Ø­";
//"THANK YOU!"="Ø´ÙØ±Ø§ ÙÙ";
//"Your payment was completed and confirmation sent to email"="ØªÙØª Ø¹ÙÙÙØ© Ø§ÙØ¯ÙØ¹ Ø¨ÙØ¬Ø§Ø­ ÙØªÙ Ø§Ø±Ø³Ø§Ù Ø§ÙØªØ£ÙÙØ¯ ÙÙØ¥ÙÙÙÙ";
//"Give us a compliment"="Ø±Ø£ÙÙ ÙÙÙÙØ§";
//"Write a thank you note"="Ø§ØªØ±Ù ØªØ¹ÙÙÙÙ ÙÙØ§";
//"Service Provider"="ÙÙØ¯Ù Ø§ÙØ®Ø¯ÙØ©";
//"Service"="Ø§ÙØ®Ø¯ÙØ©";
//"Service Type"="ÙÙØ¹ Ø§ÙØ®Ø¯ÙØ©";
//"Scheduled Date & Time"="ÙÙØª ÙØªØ§Ø±ÙØ® Ø§ÙÙÙØ¹Ø¯";
//"Cost"="Ø§ÙØªÙÙÙØ©";
//"Order Status"="Ø­Ø§ÙØ© Ø§ÙØ·ÙØ¨";
//"VIEW INVOICE"="Ø§ÙÙØ§ØªÙØ±Ø©";
//"Address"="Ø§ÙØ¹ÙÙØ§Ù";
//"Date & Time"="Ø§ÙÙÙØª ÙØ§ÙØªØ§Ø±ÙØ®";
//"PAY"="Ø§ÙØ¯ÙØ¹";
//"SP Status"="Ø­Ø§ÙØ© ÙÙØ¯Ù Ø§ÙØ®Ø¯ÙØ©";
//"View Details"="Ø¹Ø±Ø¶ Ø§ÙØªÙØ§ØµÙÙ";
//"GIVE RATING"="ÙÙÙÙØ§";
//"Payment"="Ø§ÙØ¯ÙØ¹";
//"Pay With Card"="Ø§ÙØ¯ÙØ¹ Ø¨Ø§ÙØ¨Ø·Ø§ÙØ©";
//"Pay by Cash"="Ø§ÙØ¯ÙØ¹ ÙÙØ¯Ø§";
//"ENTER YOUR CARD DETAILS"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø¯Ø®Ø§Ù ØªÙØ§ØµÙÙ Ø§ÙØ¨Ø·Ø§ÙØ©";
//"Card Type"="ÙÙØ¹ Ø§ÙØ¨Ø·Ø§ÙØ©";
//"Name on Card"="Ø§Ø³Ù Ø­Ø§ÙÙ Ø§ÙØ¨Ø·Ø§ÙØ©";
//"Card Number"="Ø±ÙÙ Ø§ÙØ¨Ø·Ø§ÙØ© ";
//"Card Expiry"="ØªØ§Ø±ÙØ® Ø§ÙØ§ÙØªÙØ§Ø¡";
//"CVV"="Ø±ÙØ² Ø§ÙØªØ­ÙÙ (CVV)";
//"Secure Credit Card Payment"="ÙØ¯ÙÙØ¹Ø§Øª Ø§ÙØ¨Ø·Ø§ÙØ§Øª Ø§ÙØ¥Ø¦ØªÙØ§ÙÙØ©  Ø§ÙØ§ÙÙØ©";
//"PAY NOW"="Ø¥ØªÙØ§Ù Ø§ÙØ¯ÙØ¹";
//"Profile"="Ø§ÙÙÙÙ Ø§ÙØ´Ø®ØµÙ";
//"ADD"="Ø£Ø¶Ù";
//"Saved Cards"="Ø¨Ø·Ø§ÙØ§ØªÙ";
//"Home Salon"="Ø®Ø¯ÙØ© ÙÙØ²ÙÙØ©";
//"SIGN IN"="ØªØ³Ø¬ÙÙ Ø§ÙØ¯Ø®ÙÙ";
//"GUEST USER"="Ø§ÙØ¯Ø®ÙÙ ÙØ²Ø§Ø¦Ø±";
//"USER"="ÙØ³ØªØ®Ø¯Ù";
//"Service Provider"="ÙÙØ¯Ù Ø®Ø¯ÙØ©";
//"E-mail"="Ø§ÙØ¨Ø±ÙØ¯ Ø§ÙØ§ÙÙØªØ±ÙÙÙ";
//"Password"="ÙÙÙØ© Ø§ÙÙØ±ÙØ±";
//"Forgot Your Password?"="ÙØ³ÙØª ÙÙÙØ© Ø§ÙÙØ±ÙØ± Ø";
//"Facebook"="ÙÙØ³Ø¨ÙÙ";
//"Google"="ÙÙÙÙ";
//"Don't have an account?"="ÙÙØ³ ÙØ¯ÙÙ Ø­Ø³Ø§Ø¨ Ø";
//"Sign up"="Ø³Ø¬Ù Ø§ÙØ§Ù";
//"Please Enter All Fields"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø¯Ø®Ø§Ù Ø¬ÙÙØ¹ Ø§ÙÙØ¹ÙÙÙØ§Øª";
//"Please enter valid email"="ÙØ±Ø¬Ù Ø¥Ø¯Ø®Ø§Ù Ø¹ÙÙØ§Ù Ø¨Ø±ÙØ¯ Ø§ÙÙØªØ±ÙÙÙ ØµØ§ÙØ­";
////"Please ensure you have proper internet connection"="Ø§ÙØ±Ø¬Ø§Ø¦ Ø§ÙØªØ£ÙØ¯ ÙÙ Ø§ØªØµØ§ÙÙ Ø¨Ø§ÙØ¥ÙØªØ±ÙØª";
//"E-mail Address"="Ø§ÙØ¨Ø±ÙØ¯ Ø§ÙØ¥ÙÙØªØ±ÙÙÙ";
//"Phone number"="Ø±ÙÙ Ø§ÙØ¬ÙØ§Ù";
//"Create password"="Ø§ÙØ´Ø§Ø¡ ÙÙÙØ© ÙØ±ÙØ±";
//"Confirm Password"="ØªØ£ÙÙØ¯ ÙÙÙØ© Ø§ÙÙØ±Ù";
//"I agree to the"="Ø£ÙØ§ÙÙ Ø¹ÙÙ";
//"TERMS AND CONDITIONS"="Ø§ÙØ´Ø±ÙØ· ÙØ§ÙØ£Ø­ÙØ§Ù";
//"Password and confirm password are didnot match"="ÙÙÙØ© Ø§ÙÙØ±ÙØ± ÙØªØ£ÙÙØ¯ ÙÙÙØ© Ø§ÙÙØ±ÙØ± ØºÙØ± ÙØªØ·Ø§Ø¨ÙØ©";
//"Please Agree Terms And Conditions"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§ÙÙÙØ§ÙÙØ© Ø¹ÙÙ Ø§ÙØ´Ø±ÙØ· ÙØ§ÙØ§Ø­ÙØ§Ù";
//"Both"="ÙÙØ§ÙÙØ§";
//"Home Services"="Ø®Ø¯ÙØ© ÙÙØ²ÙÙØ©";
//"Salon"="ØµØ§ÙÙÙ";
//"Number of providers"="Ø¹Ø¯Ø¯ Ø§ÙÙÙØ¶ÙØ§Øª";
//"Already have an account?"="ÙØ¯ÙÙ Ø­Ø³Ø§Ø¨ Ø¨Ø§ÙÙØ¹Ù Ø";
//"Sign in Now!"="Ø³Ø¬Ù Ø§ÙØ¯Ø®ÙÙ Ø§ÙØ£Ù";
//". Use Current Location"="Ø§Ø³ØªØ®Ø¯Ø§Ù Ø§ÙÙÙÙØ¹ Ø§ÙØ­Ø§ÙÙ";
//"SET LOCATION"="Ø­Ø¯Ø¯ Ø§ÙÙÙÙØ¹";
//"Write your instructions......"="ÙÙØ§Ø­Ø¸Ø§Øª";
//"Write your order instructions"="Ø£Ø¶Ù ÙÙØ§Ø­Ø¸Ø©";
//"Good"="Ø¬ÙØ¯";
//"Excellent"="ÙÙØªØ§Ø²";
//"Average"="ÙØªÙØ³Ø·";
//"Please wait for service provider acceptance"="Ø·ÙØ¨Ù ØªØ­Øª Ø§ÙØªØ£ÙÙØ¯";
//"Your request has been not accepted , try scheduled"="ÙÙ ÙØªÙ ÙØ¨ÙÙ Ø§ÙØ·ÙØ¨ Ø Ø¬Ø±Ø¨ Ø§ÙØ®Ø¯ÙØ© Ø§ÙÙØ¬Ø¯ÙÙØ©";
//"Your account is under verification,Please wait for admin approval"="Ø­Ø³Ø§Ø¨Ù ØªØ­Øª Ø§ÙØªØ£ÙÙØ¯ Ø Ø§ÙØªØ¸Ø± ÙÙØ§ÙÙØ© Ø§ÙAdmin";
//"Please select Schedule Time"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø§ÙÙÙØª";
//"Please select Schedule Date and Time"="Ø§ÙØ±Ø¬Ø§Ø¡ Ø§Ø®ØªÙØ§Ø± Ø§ÙÙÙØª ÙØ§ÙØªØ§Ø±ÙØ®";
